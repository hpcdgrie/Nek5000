C=======================================================================
      subroutine calc_y_plus
      include 'SIZE'
      include 'TOTAL'

      common /wDist/ walldist(lx1,ly1,lz1,lelv)
	  integer n
      n=nx1*ny1*nz1*nelv
	  
      if (nid.eq.0) write(6,*) "CK2"
	  call cheap_dist(walldist,1,'W  ')	 
      call y_p_limits(walldist)

      return
      end

C-------------------------------------------------------------------
      subroutine y_p_limits(wd)
      include 'SIZE'
      include 'TOTAL'
      include 'AVG'
#     include "INCOMPRESSIBLE_TURB_STAT"

      integer e,i,i0,i1,j,j0,j1,k,k0,k1,iw,jw,kw,i2
      integer ipoint,wpoint
      real wd(1)
      real tau(3),norm(3),rho,mu,vsca,tauw,yp,utau
      real n_points_wall,n_less_than_one,n_less_than_five
      real totalAA,singleAA
   
       if (nid.eq.0) write(6,*) "CK3"
   
      totalAA = 0.0
      singleAA = 0.0

      n_points_wall = 0.0
      n_less_than_one = 0.0
      n_less_than_five = 0.0

      ypmin=1.0d30
      ypmax=-1.0d30

      call gradm1(gradu(1,1,1),gradu(1,1,2),gradu(1,1,3),uavg)  ! use average velocity for y_plus calculation
      call gradm1(gradu(1,2,1),gradu(1,2,2),gradu(1,2,3),vavg)
      call gradm1(gradu(1,3,1),gradu(1,3,2),gradu(1,3,3),wavg)

      call opcolv(gradu(1,1,1),gradu(1,1,2),gradu(1,1,3),bm1)
      call opcolv(gradu(1,2,1),gradu(1,2,2),gradu(1,2,3),bm1)
      call opcolv(gradu(1,3,1),gradu(1,3,2),gradu(1,3,3),bm1)

      call opdssum(gradu(1,1,1),gradu(1,1,2),gradu(1,1,3))
      call opdssum(gradu(1,2,1),gradu(1,2,2),gradu(1,2,3))
      call opdssum(gradu(1,3,1),gradu(1,3,2),gradu(1,3,3))

      call opcolv(gradu(1,1,1),gradu(1,1,2),gradu(1,1,3),binvm1)
      call opcolv(gradu(1,2,1),gradu(1,2,2),gradu(1,2,3),binvm1)
      call opcolv(gradu(1,3,1),gradu(1,3,2),gradu(1,3,3),binvm1)

      do e=1,nelv
        do iside=1,2*ldim
          if(cbc(iside,e,1).eq.'W  ')then
          ipipe_mask=1
          if(ipipe_mask.eq.1) then
            i0=1
            j0=1
            k0=1
            i1=lx1
            j1=ly1
            k1=lz1
            if(iside.eq.1) then
              j0=2
              j1=2
            elseif(iside.eq.2) then
              i0=lx1-1
              i1=lx1-1
            elseif(iside.eq.3) then
              j0=ly1-1
              j1=ly1-1
            elseif(iside.eq.4) then
              i0=2
              i1=2
            elseif(iside.eq.5) then
              k0=2
              k1=2
            elseif(iside.eq.6) then
              k0=lz1-1
              k1=lz1-1
            endif
            do i=i0,i1
            do j=j0,j1
            do k=k0,k1
              iw=i
              jw=j
              kw=k
              if    (iside.eq.1) then
                jw=1
                norm(1)=unx(iw,kw,iside,e)
                norm(2)=uny(iw,kw,iside,e)
                norm(3)=unz(iw,kw,iside,e)
                singleAA = area(iw,kw,iside,e)
              elseif(iside.eq.2) then
                iw=lx1
                norm(1)=unx(jw,kw,iside,e)
                norm(2)=uny(jw,kw,iside,e)
                norm(3)=unz(jw,kw,iside,e)
                singleAA = area(jw,kw,iside,e)
              elseif(iside.eq.3) then
                jw=ly1
                norm(1)=unx(iw,kw,iside,e)
                norm(2)=uny(iw,kw,iside,e)
                norm(3)=unz(iw,kw,iside,e)
                singleAA = area(iw,kw,iside,e)
              elseif(iside.eq.4) then
                iw=1
                norm(1)=unx(jw,kw,iside,e)
                norm(2)=uny(jw,kw,iside,e)
                norm(3)=unz(jw,kw,iside,e)
                singleAA = area(jw,kw,iside,e)
              elseif(iside.eq.5) then
                kw=1
                norm(1)=unx(iw,jw,iside,e)
                norm(2)=uny(iw,jw,iside,e)
                norm(3)=unz(iw,jw,iside,e)
                singleAA = area(iw,jw,iside,e)
              else
                kw=lx1
                norm(1)=unx(iw,jw,iside,e)
                norm(2)=uny(iw,jw,iside,e)
                norm(3)=unz(iw,jw,iside,e)
                singleAA = area(iw,jw,iside,e)
              endif
              ipoint=i+(j-1)*lx1+(k-1)*lx1*ly1+(e-1)*lxyz
              wpoint=iw+(jw-1)*lx1+(kw-1)*lx1*ly1+(e-1)*lxyz

              mu=param(2)
              rho=param(1)

              do i2=1,ldim
              tau(i2)=0.0
                do j2=1,ldim
                  tau(i2)=tau(i2)+
     &             mu*(gradu(wpoint,i2,j2)+gradu(wpoint,j2,i2))*norm(j2)
                enddo
              enddo

              vsca=0.0
              do i2=1,ldim
                vsca=vsca+tau(i2)*norm(i2)
              enddo

              tauw=0.0
              do i2=1,ldim
                tauw=tauw+(tau(i2)-vsca*norm(i2))**2
              enddo
              tauw=sqrt(tauw)
              utau=sqrt(tauw/rho)
              yp=wd(ipoint)*utau*rho/mu
C              if(yp.gt.0) ypmin=min(ypmin,yp)
C              ypmax=max(ypmax,yp)

              n_points_wall = n_points_wall + 1.0
              if(yp.le.1.0) n_less_than_one = n_less_than_one + 1.0
              if(yp.le.5.0) n_less_than_five= n_less_than_five+ 1.0
  
              totalAA = totalAA + singleAA
            enddo
            enddo
            enddo
          endif
 
          endif
        enddo
      enddo

C      ypmin=glmin(ypmin,1)
C      ypmax=glmax(ypmax,1)

      n_points_wall = glsum(n_points_wall,1)
      n_less_than_one = glsum(n_less_than_one,1)
      n_less_than_five = glsum(n_less_than_five,1)
      totalAA = glsum(totalAA,1) 

      if (nid.eq.0) write(6,*)  "C===============================C"
      if (nid.eq.0) write(6,*)  "y_plus information for all walls"

C	  if (nid.eq.0) write(6,*)  "y_plus min/max: ",ypmin,ypmax

      if (nid.eq.0) write(6,*) "n_points_wall is :",n_points_wall
      if (nid.eq.0) write(6,*) "n_less_than_one is :",n_less_than_one
      if (nid.eq.0) write(6,*) "n_less_than_five is :",n_less_than_five

      ratio = n_less_than_one/n_points_wall
      if (nid.eq.0) write(6,*) "ratio less than 1.0 is :",ratio         
      ratio = n_less_than_five/n_points_wall
      if (nid.eq.0) write(6,*) "ratio less than 5.0 is :",ratio 
  
      if (nid.eq.0) write(6,*) "total wetted area is: ", totalAA

	  if (nid.eq.0) write(6,*)  "end of y_plus information"
      if (nid.eq.0) write(6,*)  "C==============================C"

      
      return
      end
c=======================================================================